/* @flow weak */

const depcheck = require('depcheck');
const pify = require('pify');

const options = {
  ignoreBinPackage: false, // ignore the packages with bin entry
  ignoreDirs: ['dist'],
  ignoreMatches: [],
  parsers: {
    '*.js': require('./parsers/es7'),
  },
  detectors: [
    depcheck.detector.requireCallExpression,
    depcheck.detector.importDeclaration,
    require('./detectors/requireResolve'),
  ],
  specials: [
    require('./specials/webpack'),
    require('./specials/eslint'),
  ],
};

module.exports = (d) => {
  // a lookup indicating each dependency is used by which files
  return pify(depcheck)(d, options).then({
    dependencies: [],
    devDependencies: [],
    missing: {},
    using: {},
    unused: {},
    invalidFiles: {},
    invalidDirs: {}
  }).catch(res => {
    // weird library that only returns errors
    if (res.code) throw new Error(res);
    return res;
  });
}
