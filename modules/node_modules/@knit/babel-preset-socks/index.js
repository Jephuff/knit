/* @flow weak */

const path = require('path');
const needle = require('@knit/needle');

let presets = [
  require.resolve('babel-preset-react'),
];

const buildPresets = [
  [require.resolve('babel-preset-latest'), {
    es2015: { modules: process.env.COMMONJS ? 'commonjs' : false, loose: true },
  }],
];

const testPresets = [
  [require.resolve('babel-preset-env'), {
    targets: {
      node: parseFloat(process.versions.node),
    },
  }],
];

const relayPlugin = !!(needle.pkg.dependencies || {})['react-relay']
  ? [require.resolve('@knit/babel-plugin-socks-relay')]
  : [];

let plugins = [
  // exports default from './module';
  require.resolve('babel-plugin-transform-export-extensions'),
  // add .default so you don't need require('..').default
  // breaks webpack 2 tree shaking
  // https://github.com/webpack/webpack/issues/2188#issuecomment-203542182
  // require.resolve('babel-plugin-add-module-exports'),

  // https://github.com/facebookincubator/create-react-app/blob/master/packages/babel-preset-react-app/index.js
  // would use babel-preset-react-app directly if we could overide commonjs modules
  // class { handleClick = () => { } }
  require.resolve('babel-plugin-transform-class-properties'),
  // { ...todo, completed: true }
  require.resolve('babel-plugin-transform-object-rest-spread'),
  // function* () { yield 42; yield 43; }
  // $FlowIgnore
  [require.resolve('babel-plugin-transform-regenerator'), {
    // Async functions are converted to generators by babel-preset-latest
    async: false,
  }],
  // Polyfills the runtime needed for async/await and generators
  [require.resolve('babel-plugin-transform-runtime'), {
    helpers: false,
    polyfill: false,
    regenerator: true,
    // Resolve the Babel runtime relative to the config.
    moduleName: path.dirname(require.resolve('babel-runtime/package')),
  }],
  // The following two plugins are currently necessary to get
  // babel-preset-env to work with rest/spread. More info here:
  // https://github.com/babel/babel-preset-env#caveats
  // https://github.com/babel/babel/issues/4074
  // const { a, ...z } = obj;
  require.resolve('babel-plugin-transform-es2015-destructuring'),
  // const fn = ({ a, ...otherProps }) => otherProps;
  require.resolve('babel-plugin-transform-es2015-parameters'),
];

const devPlugins = [
  // Adds component stack to warning messages
  require.resolve('babel-plugin-transform-react-jsx-source'),
  // Adds __self attribute to JSX which React will use for some warnings
  require.resolve('babel-plugin-transform-react-jsx-self'),
];
const testPlugins = [
  require.resolve('babel-plugin-transform-es2015-modules-commonjs'),
];

const env = process.env.BABEL_ENV || process.env.NODE_ENV;

switch (env) {
  case 'development':
    plugins = [
      ...plugins,
      ...relayPlugin,
      ...devPlugins,
      require.resolve('react-hot-loader/babel'),
    ];
    presets = [
      ...presets,
      ...buildPresets,
    ];
    break;
  case 'stage':
  case 'production':
    plugins = [
      ...plugins,
      ...relayPlugin,
    ];
    presets = [
      ...presets,
      ...buildPresets,
    ];
    break;
  case 'test':
    presets = [
      ...presets,
      ...testPresets,
    ];
    switch (process.env.TEST_ENV) {
      case 'single':
        plugins = [
          ...plugins,
          ...testPlugins,
          ...relayPlugin,
        ];
        break;
      case 'watch':
        plugins = [
          ...plugins,
          ...testPlugins,
        ];
        break;
      default:
        break;
    }
    break;
  default:
    break;
}

module.exports = {
  babelrc: false,
  presets,
  plugins,
};
