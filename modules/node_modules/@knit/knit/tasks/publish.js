/* @flow weak */

const execa = require('execa');
const path = require('path');
const Listr = require('listr');

const needle = require('@knit/needle');

const knit = require('@knit/knit-core');

const createPublishTask = (m) => ({
  title: m,
  skip: ctx => execa.stdout('yarn', ['info', m, '--json']).then(data => {
    const publishedVersion = JSON.parse(`[${data.replace(/}\s{/, '},{')}]`)[0].data.version;
    return publishedVersion === ctx.pkgs[m].version && `${ctx.pkgs[m].version} already published`;
  }),
  task: ctx => (
     execa('npm', [
       'publish',
     ], {
       cwd: path.join(needle.paths.modules, m),
     }).catch(err => {
       if (err.stderr.indexOf('npm ERR! publish Failed PUT 404') === 0) {
         throw Object.assign({}, err, {
           message: `could not publish ${m}`,
           stderr: 'NPM returned a 404 error when trying to publish which typically means you do not have access to the module. To make sure you are logged in to the correct account type `npm whoami`',
         });
       } else {
         throw err;
       }
     })
  ),
});

const tasks = [
  {
    title: 'publishing updated modules',
    task: ctx => new Listr(ctx.updated.map(createPublishTask)),
  },
];

module.exports = tasks;
