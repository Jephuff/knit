/* @flow weak */

const fs = require('fs-extra');
const chalk = require('chalk');
const execa = require('execa');
const path = require('path');
const pify = require('pify');

const errors = require('@knit/mittens-nice-errors');
const log = require('@knit/mittens-logger');

module.exports = (argv) => {
  const cwd = argv._[0];
   // check if dir exists
  pify(fs.stat)(cwd).then(() => {
    console.log();
    log.error(`directory \`${cwd}\` already exists`);
  }).catch(() => {
    console.log();
    log.info(`creating a new knit app in ${chalk.white(cwd)}`);
    console.log();
    log.info('copying template files...');
    pify(fs.copy)(path.resolve(path.join(__dirname, '..', 'template')), cwd).then(() => (
      execa('yarn', ['init', '--yes'], { cwd })
    )).then(() => {
      log.info('initializing git repo...');
      return execa('git', ['init'], { cwd });
    }).then(() => (
      execa('git', ['commit', '--allow-empty', '-m', ':tada: first commit'], { cwd })
    )).then(() => (
      execa('git', ['tag', 'v0.0.0', '-m', 'v0.0.0'], { cwd })
    )).then(() => {
      log.info('installing packages...');
      return execa('yarn', ['add', 'react', 'glamor'], { cwd, stdio: 'inherit' });
    }).then(() => (
      execa('yarn', ['add', '--dev', 'react-dom'], { cwd, stdio: 'inherit' })
    )).then(() => {
      log.info('installing knit...');
      return execa('yarn', ['add', '--dev', '@knit/knit', '@knit/eslint-config-socks', '@knit/mittens-develop', '@knit/mittens-publish'], { cwd, stdio: 'inherit' });
    }).then(() => {
      console.log();
      log.success('finished creating your project!');
      console.log();
      log.info('start exploring by running:');
      console.log();
      console.log(chalk.cyan(`\tcd ${cwd}`));
      console.log(chalk.cyan('\tyarn start'));
      console.log();
      log.info('read more about what you can do with knit: ');
      log.info(chalk.white('https://github.com/knitjs/knit'));
    })
    .catch(errors.catchErrors);
  });
};
