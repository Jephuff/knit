/* @flow weak */

const fs = require('fs-extra');
const chalk = require('chalk');
const execa = require('execa');
const path = require('path');

const errors = require('@knit/mittens-nice-errors');
const log = require('@knit/mittens-logger');

module.exports = (argv) => {
  const cwd = argv._[0];
  try {
    fs.statSync(cwd); // check if files exists
    console.log();
    log.error(`directory \`${cwd}\` already exists`);
  } catch (e) {
    try {
      const opts = { cwd, stdio: 'inherit' };
      console.log();
      log.info(`creating a new knit app in ${chalk.white(path.resolve(cwd))}`);
      console.log();
      log.info('copying template files...');
      fs.copySync(path.resolve(path.join(__dirname, '..', 'template')), cwd);
      execa.sync('yarn', ['init', '--yes'], { cwd });
      log.info('initializing git repo...');
      execa.sync('git', ['init'], { cwd });
      execa.sync('git', ['commit', '--allow-empty', '-m', ':tada: first commit'], { cwd });
      execa.sync('git', ['tag', 'v0.0.0', '-m', 'v0.0.0'], { cwd });
      log.info('installing packages...');
      execa.sync('yarn', ['add', 'react'], { cwd, stdio: 'inherit' });
      execa.sync('yarn', ['add', '--dev', 'react-dom'], { cwd, stdio: 'inherit' });
      log.info('installing knit...');
      execa.sync('yarn', ['add', '--dev', '@knit/knit', '@knit/mittens-develop', '@knit/mittens-publish'], { cwd, stdio: 'inherit' });
      console.log();
      log.success('finished creating your project!');
      console.log();
      log.info(`run ${chalk.cyan(`cd ${cwd}`)} to explore your project`);
      log.info(`run ${chalk.cyan('yarn run knit:list')} to view your modules`);
      log.info(`run ${chalk.cyan('yarn start')} to spin up a development server`);
      console.log();
      log.info('read more about what you can do with knit here: ');
      log.info(chalk.white('https://github.com/knitjs/knit'));
    } catch (e) {
      errors.catchErrors(e);
    }
  }
};
